{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"No one will drive us from the paradise which Equi7Grid created for us GitHub : https://github.com/csaybar/equi7grid-lite \ud83c\udf10 PyPI : https://pypi.org/project/equi7grid-lite/ \ud83d\udee0\ufe0f Overview \ud83d\udcca The equi7grid-lite package implements a user-friendly Python interface to interact with the Equi7Grid grid system. With this package, users can convert geographic coordinates to Equi7Grid tiles and vice versa. equi7grid-lite is an unofficial Python implementation of Equi7Grid . It offers improvements and a simplified interface for grid interaction. This implementation differs from the official version in three key ways: Quad-Tree Grid Splitting : Users split the grid in a Quad-Tree fashion, with each grid level divided into four tiles. Revised Grid ID Encoding : The grid ID is encoded in meters, without the \"T1\", \"T3\", or \"T6\" tile system references. Upper Bound Level : The grid level is capped at a threshold of 2,500,000 meters to manage grid complexity. Key Features \u2728 Coordinate Conversion : Convert between geographic coordinates and Equi7Grid tiles easily. \ud83c\udf0d Quad-Tree Grid Management : Supports splitting and managing grids in a Quad-Tree structure. \ud83d\uddfa\ufe0f Cubo Integration : Use equi7grid-lite in combination with Cubo for Earth Observation (EO) data retrieval. \ud83d\udef0\ufe0f Please refer to the Equi7Grid repository for more information on the official implementation. Installation \u2699\ufe0f Install the latest version from PyPI: pip install equi7grid-lite How to use \ud83d\udee0\ufe0f Basic Usage: Working with the Equi7Grid \ud83d\uddfa\ufe0f Convert geographic coordinates to Equi7Grid tiles from equi7grid_lite import Equi7Grid grid_system = Equi7Grid ( min_grid_size = 2560 ) lon , lat = - 79.5 , - 5.49 grid_system . lonlat2grid ( lon = lon , lat = lat ) # Equi7Grid(min_grid_size=2560) # ---------------- # levels: 0, 1, ... , 7, 8 # zones: AN, NA, OC, SA, AF, EU, AS # min_grid_size: 2560 meters # max_grid_size: 1310720 meters Convert from grid ID to geographic coordinates grid_system . grid2lonlat ( grid_id = \"SA2560_E2009N2525\" ) # id lon lat x y zone level land geometry #0 SA2560_E2009N2525 -79.507568 -5.485739 5144320.0 6465280.0 SA Z0 True POLYGON ((514560... Grid Management: Creating Grids for a Specific Region You can create a grid for a given bounding box or polygon. import geopandas as gpd from equi7grid_lite import Equi7Grid # Load country geometry (e.g., Peru) world_filepath = gpd . datasets . get_path ( 'naturalearth_lowres' ) world = gpd . read_file ( world_filepath ) country = world [ world . name == \"Peru\" ] . geometry # Create a grid of Equi7Grid tiles that cover the bounding box of the country grid = grid_system . create_grid ( level = 4 , zone = \"SA\" , mask = country # Only include tiles that intersect the polygon ) # Export the grid to a GeoDataFrame grid . to_file ( \"grid.shp\" ) Cubo Integration \ud83d\udef0\ufe0f Use the equi7grid-lite package with cubo to retrieve EO data. import cubo import rioxarray from equi7grid_lite import Equi7Grid from rasterio.enums import Resampling # Initialize Equi7Grid system grid_system = Equi7Grid ( min_grid_size = 2560 ) # Use CUBO to retrieve EO data lon , lat = - 122.4194 , 37.7749 cubo_params = grid_system . cubo_utm_parameters ( lon = lon , lat = lat ) da = cubo . create ( lat = cubo_params [ \"lat\" ], lon = cubo_params [ \"lon\" ], collection = \"sentinel-2-l2a\" , bands = [ \"B04\" , \"B03\" , \"B02\" ], start_date = \"2021-08-01\" , end_date = \"2021-10-30\" , edge_size = cubo_params [ \"distance\" ] // 10 , resolution = 10 , query = { \"eo:cloud_cover\" : { \"lt\" : 50 }} ) # Reproject and resample the cube image_reprojected = da . to_dataset ( \"band\" ) . rio . reproject ( cubo_params [ \"crs\" ], resolution = 2.5 , resampling = Resampling . lanczos ) License \ud83d\udcdd This package is released under the MIT License. For more information, see the LICENSE file. Contributing \ud83e\udd1d Contributions are welcome! For bug reports or feature requests, please open an issue on GitHub. For contributions, please submit a pull request with a detailed description of the changes. Citation \ud83d\udcc4 If you use this package in your research, please consider citing the original Equi7Grid package and paper. Package: @ software { bernhard_bm_2023_8252376 , author = { Bernhard BM and Sebastian Hahn and actions - user and cnavacch and Manuel Schmitzer and shochsto and Senmao Cao } , title = { TUW - GEO / Equi7Grid : v0 . 2 . 4 } , month = aug , year = 2023 , publisher = { Zenodo } , version = { v0 . 2 . 4 } , doi = { 10 . 5281 / zenodo . 8252376 } , url = { https : // doi . org / 10 . 5281 / zenodo . 8252376 } } Paper: @ article { BAUERMARSCHALLINGER201484 , title = { Optimisation of global grids for high - resolution remote sensing data } , journal = { Computers & Geosciences } , volume = { 72 } , pages = { 84 - 93 } , year = { 2014 } , issn = { 0098 - 3004 } , doi = { https : // doi . org / 10 . 1016 / j . cageo . 2014 . 07 . 005 } , url = { https : // www . sciencedirect . com / science / article / pii / S0098300414001629 } , author = { Bernhard Bauer - Marschallinger and Daniel Sabel and Wolfgang Wagner } , keywords = { Remote sensing , High resolution , Big data , Global grid , Projection , Sampling , Equi7 Grid } }","title":"Index"},{"location":"index.html#_1","text":"No one will drive us from the paradise which Equi7Grid created for us GitHub : https://github.com/csaybar/equi7grid-lite \ud83c\udf10 PyPI : https://pypi.org/project/equi7grid-lite/ \ud83d\udee0\ufe0f","title":""},{"location":"index.html#overview","text":"The equi7grid-lite package implements a user-friendly Python interface to interact with the Equi7Grid grid system. With this package, users can convert geographic coordinates to Equi7Grid tiles and vice versa. equi7grid-lite is an unofficial Python implementation of Equi7Grid . It offers improvements and a simplified interface for grid interaction. This implementation differs from the official version in three key ways: Quad-Tree Grid Splitting : Users split the grid in a Quad-Tree fashion, with each grid level divided into four tiles. Revised Grid ID Encoding : The grid ID is encoded in meters, without the \"T1\", \"T3\", or \"T6\" tile system references. Upper Bound Level : The grid level is capped at a threshold of 2,500,000 meters to manage grid complexity.","title":"Overview \ud83d\udcca"},{"location":"index.html#key-features","text":"Coordinate Conversion : Convert between geographic coordinates and Equi7Grid tiles easily. \ud83c\udf0d Quad-Tree Grid Management : Supports splitting and managing grids in a Quad-Tree structure. \ud83d\uddfa\ufe0f Cubo Integration : Use equi7grid-lite in combination with Cubo for Earth Observation (EO) data retrieval. \ud83d\udef0\ufe0f Please refer to the Equi7Grid repository for more information on the official implementation.","title":"Key Features \u2728"},{"location":"index.html#installation","text":"Install the latest version from PyPI: pip install equi7grid-lite","title":"Installation \u2699\ufe0f"},{"location":"index.html#how-to-use","text":"","title":"How to use \ud83d\udee0\ufe0f"},{"location":"index.html#basic-usage-working-with-the-equi7grid","text":"","title":"Basic Usage: Working with the Equi7Grid \ud83d\uddfa\ufe0f"},{"location":"index.html#convert-geographic-coordinates-to-equi7grid-tiles","text":"from equi7grid_lite import Equi7Grid grid_system = Equi7Grid ( min_grid_size = 2560 ) lon , lat = - 79.5 , - 5.49 grid_system . lonlat2grid ( lon = lon , lat = lat ) # Equi7Grid(min_grid_size=2560) # ---------------- # levels: 0, 1, ... , 7, 8 # zones: AN, NA, OC, SA, AF, EU, AS # min_grid_size: 2560 meters # max_grid_size: 1310720 meters","title":"Convert geographic coordinates to Equi7Grid tiles"},{"location":"index.html#convert-from-grid-id-to-geographic-coordinates","text":"grid_system . grid2lonlat ( grid_id = \"SA2560_E2009N2525\" ) # id lon lat x y zone level land geometry #0 SA2560_E2009N2525 -79.507568 -5.485739 5144320.0 6465280.0 SA Z0 True POLYGON ((514560...","title":"Convert from grid ID to geographic coordinates"},{"location":"index.html#grid-management-creating-grids-for-a-specific-region","text":"You can create a grid for a given bounding box or polygon. import geopandas as gpd from equi7grid_lite import Equi7Grid # Load country geometry (e.g., Peru) world_filepath = gpd . datasets . get_path ( 'naturalearth_lowres' ) world = gpd . read_file ( world_filepath ) country = world [ world . name == \"Peru\" ] . geometry # Create a grid of Equi7Grid tiles that cover the bounding box of the country grid = grid_system . create_grid ( level = 4 , zone = \"SA\" , mask = country # Only include tiles that intersect the polygon ) # Export the grid to a GeoDataFrame grid . to_file ( \"grid.shp\" )","title":"Grid Management: Creating Grids for a Specific Region"},{"location":"index.html#cubo-integration","text":"Use the equi7grid-lite package with cubo to retrieve EO data. import cubo import rioxarray from equi7grid_lite import Equi7Grid from rasterio.enums import Resampling # Initialize Equi7Grid system grid_system = Equi7Grid ( min_grid_size = 2560 ) # Use CUBO to retrieve EO data lon , lat = - 122.4194 , 37.7749 cubo_params = grid_system . cubo_utm_parameters ( lon = lon , lat = lat ) da = cubo . create ( lat = cubo_params [ \"lat\" ], lon = cubo_params [ \"lon\" ], collection = \"sentinel-2-l2a\" , bands = [ \"B04\" , \"B03\" , \"B02\" ], start_date = \"2021-08-01\" , end_date = \"2021-10-30\" , edge_size = cubo_params [ \"distance\" ] // 10 , resolution = 10 , query = { \"eo:cloud_cover\" : { \"lt\" : 50 }} ) # Reproject and resample the cube image_reprojected = da . to_dataset ( \"band\" ) . rio . reproject ( cubo_params [ \"crs\" ], resolution = 2.5 , resampling = Resampling . lanczos )","title":"Cubo Integration \ud83d\udef0\ufe0f"},{"location":"index.html#license","text":"This package is released under the MIT License. For more information, see the LICENSE file.","title":"License \ud83d\udcdd"},{"location":"index.html#contributing","text":"Contributions are welcome! For bug reports or feature requests, please open an issue on GitHub. For contributions, please submit a pull request with a detailed description of the changes.","title":"Contributing \ud83e\udd1d"},{"location":"index.html#citation","text":"If you use this package in your research, please consider citing the original Equi7Grid package and paper.","title":"Citation \ud83d\udcc4"},{"location":"index.html#package","text":"@ software { bernhard_bm_2023_8252376 , author = { Bernhard BM and Sebastian Hahn and actions - user and cnavacch and Manuel Schmitzer and shochsto and Senmao Cao } , title = { TUW - GEO / Equi7Grid : v0 . 2 . 4 } , month = aug , year = 2023 , publisher = { Zenodo } , version = { v0 . 2 . 4 } , doi = { 10 . 5281 / zenodo . 8252376 } , url = { https : // doi . org / 10 . 5281 / zenodo . 8252376 } }","title":"Package:"},{"location":"index.html#paper","text":"@ article { BAUERMARSCHALLINGER201484 , title = { Optimisation of global grids for high - resolution remote sensing data } , journal = { Computers & Geosciences } , volume = { 72 } , pages = { 84 - 93 } , year = { 2014 } , issn = { 0098 - 3004 } , doi = { https : // doi . org / 10 . 1016 / j . cageo . 2014 . 07 . 005 } , url = { https : // www . sciencedirect . com / science / article / pii / S0098300414001629 } , author = { Bernhard Bauer - Marschallinger and Daniel Sabel and Wolfgang Wagner } , keywords = { Remote sensing , High resolution , Big data , Global grid , Projection , Sampling , Equi7 Grid } }","title":"Paper:"},{"location":"CHANGELOG.html","text":"Changelog All notable changes to the opensr-test project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . Added For new features. Changed For changes in existing functionality. Deprecated For soon-to-be removed features. Removed For now removed features. Fixed For any bug fixes. Security In case of vulnerabilities. [Unreleased] [0.6.0] - 2024-06-22 Iterating to obtain a better API. We now only have three core methods in the Equi7Grid class. The methods are lonlat2grid , grid2lonlat , and create_grid . We prefer to keep the API simple and easy to use. We have two new auxiliary methods in the Equi7Grid class. The methods are grid2grid and cubo_utm_parameters . The grid2grid method is used to obtain the subgrids at the finest level given a superior grid tile. This method runs in parallel to speed up the process and does not run validations. The cubo_utm_parameters method is used to obtain the CUBO UTM parameters given a lonlat coordinate. ReadME updated with examples. [0.4.0] - 2024-06-12 Bug in a regex expression fixed. grid2lonlat method now works with regions outside South America. New method added to the Equi7Grid class. The method is called lonlat2grid_ids . This method is used to convert geographic coordinates to Equi7Grid tile ids given a specific level. [0.3.0] - 2024-06-11 A new attribute added self.levels to the Equi7Grid constructor. This attribute is a List of the available levels in the QuadTree structure. New arguments added to lonlat2grid and grid2lonlat methods. First a centroid argument. This argument is used to specify if user wants the centroid of the grid or the bottom-left corner. By default, the centroid is True in order to keep compatibility with the cubo package. The level argument is used to specify the level of the QuadTree structure reference. By default, the level is 0. New method added to the Equi7Grid class. The method is called align2grid. This method is used to align coordinates to the QuadTree structure. [0.2.0] - 2024-06-10 Documentation in README.md and code comments improved. Shameful bug respect to the initial level. It must be 0 no 1. I'm not in R! Fix a bug with respect to the float precision. We only consider 8 decimal places. Now the next statement is always true: grid_id = lonlat2grid ( ... ) grid2lonlat ( grid_id ) == grid2lonlat ( lonlat2grid ( grid2lonlat ( grid_id ))) We have added a new method Equi7Grid.reproject() to convert rioxarray and shapely geometries to the Equi7Grid. [0.1.0] - 2024-06-09 First release.","title":"Changelog"},{"location":"CHANGELOG.html#changelog","text":"All notable changes to the opensr-test project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"CHANGELOG.html#added","text":"For new features.","title":"Added"},{"location":"CHANGELOG.html#changed","text":"For changes in existing functionality.","title":"Changed"},{"location":"CHANGELOG.html#deprecated","text":"For soon-to-be removed features.","title":"Deprecated"},{"location":"CHANGELOG.html#removed","text":"For now removed features.","title":"Removed"},{"location":"CHANGELOG.html#fixed","text":"For any bug fixes.","title":"Fixed"},{"location":"CHANGELOG.html#security","text":"In case of vulnerabilities.","title":"Security"},{"location":"CHANGELOG.html#unreleased","text":"","title":"[Unreleased]"},{"location":"CHANGELOG.html#060-2024-06-22","text":"Iterating to obtain a better API. We now only have three core methods in the Equi7Grid class. The methods are lonlat2grid , grid2lonlat , and create_grid . We prefer to keep the API simple and easy to use. We have two new auxiliary methods in the Equi7Grid class. The methods are grid2grid and cubo_utm_parameters . The grid2grid method is used to obtain the subgrids at the finest level given a superior grid tile. This method runs in parallel to speed up the process and does not run validations. The cubo_utm_parameters method is used to obtain the CUBO UTM parameters given a lonlat coordinate. ReadME updated with examples.","title":"[0.6.0] - 2024-06-22"},{"location":"CHANGELOG.html#040-2024-06-12","text":"Bug in a regex expression fixed. grid2lonlat method now works with regions outside South America. New method added to the Equi7Grid class. The method is called lonlat2grid_ids . This method is used to convert geographic coordinates to Equi7Grid tile ids given a specific level.","title":"[0.4.0] - 2024-06-12"},{"location":"CHANGELOG.html#030-2024-06-11","text":"A new attribute added self.levels to the Equi7Grid constructor. This attribute is a List of the available levels in the QuadTree structure. New arguments added to lonlat2grid and grid2lonlat methods. First a centroid argument. This argument is used to specify if user wants the centroid of the grid or the bottom-left corner. By default, the centroid is True in order to keep compatibility with the cubo package. The level argument is used to specify the level of the QuadTree structure reference. By default, the level is 0. New method added to the Equi7Grid class. The method is called align2grid. This method is used to align coordinates to the QuadTree structure.","title":"[0.3.0] - 2024-06-11"},{"location":"CHANGELOG.html#020-2024-06-10","text":"Documentation in README.md and code comments improved. Shameful bug respect to the initial level. It must be 0 no 1. I'm not in R! Fix a bug with respect to the float precision. We only consider 8 decimal places. Now the next statement is always true: grid_id = lonlat2grid ( ... ) grid2lonlat ( grid_id ) == grid2lonlat ( lonlat2grid ( grid2lonlat ( grid_id ))) We have added a new method Equi7Grid.reproject() to convert rioxarray and shapely geometries to the Equi7Grid.","title":"[0.2.0] - 2024-06-10"},{"location":"CHANGELOG.html#010-2024-06-09","text":"First release.","title":"[0.1.0] - 2024-06-09"},{"location":"CODE_OF_CONDUCT.html","text":"Contributor covenant code of conduct \ud83d\udcdc Our pledge \ud83e\udd1d In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. \ud83c\udf0e\ud83e\udd17 Our standards \ud83d\udccf Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language. \ud83d\ude0a Being respectful of differing viewpoints and experiences. \ud83e\udd14\ud83d\udc42 Gracefully accepting constructive criticism. \ud83d\udee0\ufe0f Focusing on what is best for the community. \ud83e\udd32 Showing empathy towards other community members. \ud83e\udd7a\u2764\ufe0f Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances. \ud83d\udeab\ud83d\udcac Trolling, insulting/derogatory comments, and personal or political attacks. \ud83d\udeab\ud83d\ude20 Public or private harassment. \ud83d\udeab\ud83d\udc65 Publishing others' private information, such as a physical or electronic address, without explicit permission. \ud83d\udeab\ud83c\udfe1 Other conduct which could reasonably be considered inappropriate in a professional setting. \ud83d\udeab\ud83d\udc54 Our responsibilities \ud83d\udee1\ufe0f Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope \ud83c\udf10 This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement \ud83d\udea8 All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution \ud83d\udc4f This Code of Conduct is adapted from the Contributor covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Code of conduct"},{"location":"CODE_OF_CONDUCT.html#contributor-covenant-code-of-conduct","text":"","title":"Contributor covenant code of conduct \ud83d\udcdc"},{"location":"CODE_OF_CONDUCT.html#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation. \ud83c\udf0e\ud83e\udd17","title":"Our pledge \ud83e\udd1d"},{"location":"CODE_OF_CONDUCT.html#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language. \ud83d\ude0a Being respectful of differing viewpoints and experiences. \ud83e\udd14\ud83d\udc42 Gracefully accepting constructive criticism. \ud83d\udee0\ufe0f Focusing on what is best for the community. \ud83e\udd32 Showing empathy towards other community members. \ud83e\udd7a\u2764\ufe0f Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances. \ud83d\udeab\ud83d\udcac Trolling, insulting/derogatory comments, and personal or political attacks. \ud83d\udeab\ud83d\ude20 Public or private harassment. \ud83d\udeab\ud83d\udc65 Publishing others' private information, such as a physical or electronic address, without explicit permission. \ud83d\udeab\ud83c\udfe1 Other conduct which could reasonably be considered inappropriate in a professional setting. \ud83d\udeab\ud83d\udc54","title":"Our standards \ud83d\udccf"},{"location":"CODE_OF_CONDUCT.html#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our responsibilities \ud83d\udee1\ufe0f"},{"location":"CODE_OF_CONDUCT.html#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope \ud83c\udf10"},{"location":"CODE_OF_CONDUCT.html#enforcement","text":"All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement \ud83d\udea8"},{"location":"CODE_OF_CONDUCT.html#attribution","text":"This Code of Conduct is adapted from the Contributor covenant , version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","title":"Attribution \ud83d\udc4f"},{"location":"CONTRIBUTING.html","text":"Contributing to equi7grid-lite Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways: Types of Contributions Report Bugs Report bugs at https://github.com/csaybar/equi7grid-lite/issues If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug. Fix Bugs Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement a fix for it. Implement Features Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it. Write Documentation Cookiecutter PyPackage could always use more documentation, whether as part of the official docs, in docstrings, or even on the web in blog posts, articles, and such. Submit Feedback The best way to send feedback is to file an issue at https://github.com/csaybar/equi7grid-lite/issues. If you are proposing a new feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :) Get Started! Ready to contribute? Here's how to set up equi7grid-lite for local development. Please note this documentation assumes you already have poetry and Git installed and ready to go. Fork the equi7grid-lite repo on GitHub. Clone your fork locally: cd <directory_in_which_repo_should_be_created> git clone git@github.com:YOUR_NAME/equi7grid-lite.git Now we need to install the environment. Navigate into the directory cd equi7grid-lite If you are using pyenv , select a version to use locally. (See installed versions with pyenv versions ) pyenv local <x.y.z> Then, install and activate the environment with: poetry install poetry shell Install pre-commit to run linters/formatters at commit time: poetry run pre-commit install Create a branch for local development: git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. Don't forget to add test cases for your added functionality to the tests directory. When you're done making changes, check that your changes pass the formatting tests. make check Now, validate that all unit tests are passing: make test Before raising a pull request you should also run tox. This will run the tests across different versions of Python: tox This requires you to have multiple versions of python installed. This step is also triggered in the CI/CD pipeline, so you could also choose to skip this step locally. Commit your changes and push your branch to GitHub: git add . git commit -m \"Your detailed description of your changes.\" git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website. Pull Request Guidelines Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md .","title":"Contributing"},{"location":"CONTRIBUTING.html#contributing-to-equi7grid-lite","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways:","title":"Contributing to equi7grid-lite"},{"location":"CONTRIBUTING.html#types-of-contributions","text":"","title":"Types of Contributions"},{"location":"CONTRIBUTING.html#report-bugs","text":"Report bugs at https://github.com/csaybar/equi7grid-lite/issues If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug.","title":"Report Bugs"},{"location":"CONTRIBUTING.html#fix-bugs","text":"Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement a fix for it.","title":"Fix Bugs"},{"location":"CONTRIBUTING.html#implement-features","text":"Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.","title":"Implement Features"},{"location":"CONTRIBUTING.html#write-documentation","text":"Cookiecutter PyPackage could always use more documentation, whether as part of the official docs, in docstrings, or even on the web in blog posts, articles, and such.","title":"Write Documentation"},{"location":"CONTRIBUTING.html#submit-feedback","text":"The best way to send feedback is to file an issue at https://github.com/csaybar/equi7grid-lite/issues. If you are proposing a new feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :)","title":"Submit Feedback"},{"location":"CONTRIBUTING.html#get-started","text":"Ready to contribute? Here's how to set up equi7grid-lite for local development. Please note this documentation assumes you already have poetry and Git installed and ready to go. Fork the equi7grid-lite repo on GitHub. Clone your fork locally: cd <directory_in_which_repo_should_be_created> git clone git@github.com:YOUR_NAME/equi7grid-lite.git Now we need to install the environment. Navigate into the directory cd equi7grid-lite If you are using pyenv , select a version to use locally. (See installed versions with pyenv versions ) pyenv local <x.y.z> Then, install and activate the environment with: poetry install poetry shell Install pre-commit to run linters/formatters at commit time: poetry run pre-commit install Create a branch for local development: git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. Don't forget to add test cases for your added functionality to the tests directory. When you're done making changes, check that your changes pass the formatting tests. make check Now, validate that all unit tests are passing: make test Before raising a pull request you should also run tox. This will run the tests across different versions of Python: tox This requires you to have multiple versions of python installed. This step is also triggered in the CI/CD pipeline, so you could also choose to skip this step locally. Commit your changes and push your branch to GitHub: git add . git commit -m \"Your detailed description of your changes.\" git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website.","title":"Get Started!"},{"location":"CONTRIBUTING.html#pull-request-guidelines","text":"Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.md .","title":"Pull Request Guidelines"},{"location":"docs/index.html","text":"equi7grid-lite This is a template repository for Python projects that use Poetry for their dependency management.","title":"equi7grid-lite"},{"location":"docs/index.html#equi7grid-lite","text":"This is a template repository for Python projects that use Poetry for their dependency management.","title":"equi7grid-lite"}]}